from typing import List


class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        seen=set()
        for row in range(9):
            for col in range(9):
                num=board[row][col]
                
                
                if num!=".":
                    row_=num+"_R_"+str(row)
                    col_=num+"_C_"+str(col)
                    box_=num+"_B_"+str(row//3)+"_"+str(col//3)
                    print(seen)
                    if row_ in seen or col_ in seen or box_ in seen:
                        return False
                    else:
                        seen.add(row_)
                        seen.add(col_)
                        seen.add(box_)
        return True
    
    
sol=Solution()
board=[["5","3",".",".","7",".",".",".","."],
       ["6",".",".","1","9","5",".",".","."],
       [".","9","8",".",".",".",".","6","."],
       ["8",".",".",".","6",".",".",".","3"],
       ["4",".",".","8",".","3",".",".","1"],
       ["7",".",".",".","2",".",".",".","6"],
       [".","6",".",".",".",".","2","8","."],
       [".",".",".","4","1","9",".",".","5"],
       [".",".",".",".","8",".",".","7","9"]]

board=[[".",".",".",".","5",".",".","1","."],
       [".","4",".","3",".",".",".",".","."],
       [".",".",".",".",".","3",".",".","1"],
       ["8",".",".",".",".",".",".","2","."],
       [".",".","2",".","7",".",".",".","."],
       [".","1","5",".",".",".",".",".","."],
       [".",".",".",".",".","2",".",".","."],
       [".","2",".","9",".",".",".",".","."],
       [".",".","4",".",".",".",".",".","."]]
print(sol.isValidSudoku(board))