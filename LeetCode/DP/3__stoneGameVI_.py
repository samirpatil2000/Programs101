from typing import List
class Solution:
    def stoneGameVII(self, stones: List[int]) -> int:
        def dfs(arr:List[int],total_sum:int,A_sum:int,B_sum:int,A:bool,B:bool):
            
            if len(arr)==1:
                return 0
            if A:
                from_start=dfs(arr[1:],total_sum-arr[0],A_sum=A_sum,B_sum=B_sum+total_sum-arr[0],B=True,A=False)+total_sum-arr[0]
                from_end=dfs(arr[:-1],total_sum-arr[-1],A_sum=A_sum,B_sum=B_sum+total_sum-arr[-1],B=True,A=False)+total_sum-arr[-1]
                print(A_sum,B_sum)
                return max(from_start,from_end)
            if B:
                from_start=dfs(arr[1:],total_sum-arr[0],A_sum=A_sum+total_sum-arr[0],B_sum=B_sum,B=False,A=True)+total_sum-arr[0]
                from_end=dfs(arr[:-1],total_sum-arr[-1],A_sum=A_sum+total_sum-arr[-1],B_sum=B_sum,B=False,A=True)+total_sum-arr[-1]
                print(A_sum,B_sum)
                return max(from_start,from_end)
        def dfs2(arr,total_sum,memo={}):
            if len(arr)==1:
                return 0
            if len(arr)==2:
                return max(arr[0],arr[1])
            # print(arr)
            from_start=total_sum-arr[0]-dfs2(arr[1:],total_sum-arr[0],memo)
            from_end=total_sum-arr[-1]-dfs2(arr[:-1],total_sum-arr[-1],memo)
            return max(from_start,from_end)
        
        n=len(stones)
        dp = [[-1]*n for _ in range(n)]
        prefix = [0]
        for i in stones:
            prefix.append(prefix[-1]+i)
        def dfs3(arr,left,right):
            if left==right:
                return 0
            if right-left==1:
                return max(arr[left],arr[right])
            if dp[left][right]!=-1:
                return dp[left][right]
            # from_start=total_sum-arr[left]-dfs3(arr,left+1,right,total_sum-arr[left],dp)
            from_start=prefix[right+1] - prefix[left+1]-dfs3(arr,left+1,right)
            # from_end=total_sum-arr[right]-dfs3(arr,left,right-1,total_sum-arr[right],dp)
            from_end=prefix[right] - prefix[left]-dfs3(arr,left,right-1)
            
            dp[left][right]=max(from_start,from_end)
            return dp[left][right]
        
        # return dfs3(stones,0,n-1)    
        return dfs2(stones,sum(stones))    

# arr=[1,2,3,4]
# print(arr[:-1])

sol=Solution()
stones = [5,3,1,4,2]
# stones = [(5,3,1,4,2)]
# stones = [379,799,323,896,970,878,527,19,492,935,376,226,125,170,610,951,171,758,365,970,245,955,617,784,412,788,145,892,778,220,324,893,475,709,210,60,314,976,700,384,696,614,552,356,591,554,340,848,659,721,889,132,972,841,638,337,590,150,890,929,557,625,521,244,67,12,973,843,500,591,27,925,290,731,972,523,827,367,938,208,521,433,949,30,788,497,505,472,621,87,491,211,35,64,483,541,313,203,956,80,236,193,381,42,767,415,422,810,633,878,170,533,411,174,949,8,200,963,80,134,33,701,845,326,525,258,53,358,88,248,573,830,359,886,536,708,748,466,32,418,60,78,854,350,534,926,376,536,110,620,464,178,725,857,598,421,427,585,160,697,687,439,510,62,247,821,32,105,341,924,153,334,633,130,106,840,804,658,81,962,679,703,36,690,612,269,120,55,50,91,957,319,103,718,224,805,801,257,740,886,843,702,1,442,268,130,628,472,980,942,23,900,219,678,784,592,801,477,191,92,424,40,734,917,644,486,151,63,611,193,144,946,445,258,497,923,506,961,870,677,799,474,19,510,637,698,997,897,725,132,353,388,921,226,697,470,189,459,479,767,186,140,714,499,588,865,884,657,730,992,773,939,292,284,54,283,512,798,384,697,884,259,191,476,510,270,777,130,74,400,381,869,396,883,880,719,852,270,648,766,601,615,171,957,275,806,14,212,365,758,172,832,565,309,941,150,793,82,307,663,100,956,154,503,359,686,79,187,758,404,115,96,182,888,317,155,262,635,149,469,707,506,634,368,87,619,874,61,383,100,995,167,769,924,671,866,759,245,161,981,195,283,526,508,373,161,392,231,67,822,909,321,265,615,387,692,216,182,647,660,333,568,614,612,90,262,736,943,335,561,930,434,45,966,550,451,717,47,398,867,899,422,196,239,828,682,416,361,727,455,573,96,920,55,326,954,602,212,358,555,461,295,498,468,104,724,488,824,637,730,307,393,468,136,333,967,724,501,276,306,450,323,820,991,614,788,306,368,771,523,998,287,172,510,511,273,520,288,732,158,874,271,365,149,374,77,90,114,476,858,759,11,117,791,380,407,176,243,907,983,908,95,406,798,75,38,715,562,845,885,713,886,975,466,612,56,971,262,96,940,834,726,886,94,192,178,434,777,460,535,236,532,697,223,180,557,61,109,738,404,241,768,527,553,796,20,175,398,595,441,320,163,610,873,124,539,725,809,33,797,872,272,428,572,598,322,733,795,754,448,839,959,316,668,275,683,279,649,943,186,515,893,556,977,534,697,691,714,667,332,847,526,885,441,469,532,806,619,535,631,970,587,950,777,717,571,198,865,941,162,479,802,856,118,30,346,353,750,174,240,538,469,820,359,59,864,22,47,497,216,249,874,972,962,464,325,893,280,30,241,816,521,472,794,347,261,283,976,967,183,471,103,426,399,55,276,487,628,143,319,246,344,919,472,154,123,938,793,447,475,811,437,221,757,900,372,849,623,158,403,164,392,123,11,507,498,423,165,112,453,745,989,496,863,717,240,48,232,492,850,84,350,998,175,832,540,694,43,572,390,293,475,541,919,922,716,681,541,485,386,498,702,121,986,371,361,342,853,926,242,616,61,441,725,880,235,241,483,917,683,352,383,454,246,58,987,86,239,842,109,933,776,993,64,156,432,272,351,491,157,955,6,720,305,975,874,73,383,47,272,324,60,713,184,905,4,508,746,295,24,172,593,244,782,565,924,379,380,197,766,954,853,210,197,261,783,165,871,329,95,547,828,688,627,449,737,754,516,721,626,499,397,821,388,656,734,661,75,383,13,356,517,631,54,766,314,541,962,278,774,345,946,978,438,697,325,539,330,226,863,353,526,38,299,371,524,600,893,522,504,506,396,405,634,244,200,951,427,684,866,246,971,268,541,715,826,412,747,527,598,211,796,133,63,174,922,429,535,216,829,398,858,770,516,368,493,945,517,710,964,873,374,591,616,435,861,448,627,369,611,871,408,20,236,943,693,514,722,290,238,894,763,772,826,896,360,944,329,850,20,395,134,971,653,378,699,145,705,184,843,612,495,323,415,393,316,338,772,536,412,304,761,98,339,199,245,213,966,275,606,799,445,870,26,654,181,970,833,278,805,616,475,938,565,325,322,916,606,239,11,761,827,66,361,651,69,386,26,985,866,745,841,743,720,134,721,707,667,234,632,669,958,917,198,571,34,755,825,22,595,506,331,774,542,227,617,605,239,1000,870,884,127,545,858,320,836,687,638,181,544]
print(sol.stoneGameVII(stones))